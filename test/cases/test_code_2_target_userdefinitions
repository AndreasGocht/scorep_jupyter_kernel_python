import math
import asyncio
from scipy.stats import beta
import numpy as np
import warnings
import os

class A():
    my_desc = 'desc'

    def foo(self):
        print("test")

    def bar(x, y, z):
        print("test2")

    class A_inner():
        definitions = "this is an inner class"

        def write_definition(definition_new, self=None):
            self.definition = definition_new

def simple_decorator(func):
    def inner1(*args, **kwargs):
        func(*args, **kwargs)
        print("inner")
    return inner1

@simple_decorator
def simple_decorated():
    print("decorated")

async def sample_task():
    await asyncio.sleep(10)
    return 'task complete'

import pandas

class B():
    def foo_new(self):
        print("do not overwrite foo of A")

    class A_inner_new():
        definitions = "do not overwrite inner class of A"

        def write_definition_new(definition_new, self=None):
            self.definition = definition_new


def foo():
    print("this was added later")

def bar():
    print("a new function")